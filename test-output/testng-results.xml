<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="8365" started-at="2021-04-27T03:50:04Z" finished-at="2021-04-27T03:50:12Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="8365" started-at="2021-04-27T03:50:04Z" finished-at="2021-04-27T03:50:12Z">
      <class name="com.testframework.AdactinExtendReport">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="beforeClass" is-config="true" duration-ms="5711" started-at="2021-04-27T03:50:04Z" finished-at="2021-04-27T03:50:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-27T03:50:09Z" finished-at="2021-04-27T03:50:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tc0()[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="tc0" duration-ms="405" started-at="2021-04-27T03:50:09Z" finished-at="2021-04-27T03:50:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc0 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="afterMethod" is-config="true" duration-ms="519" started-at="2021-04-27T03:50:10Z" finished-at="2021-04-27T03:50:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testframework.AdactinExtendReport.tc0() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="tc1()[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="tc1" duration-ms="966" started-at="2021-04-27T03:50:10Z" finished-at="2021-04-27T03:50:11Z">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=89.0.4389.128)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-M1BJJAF', ip: '192.168.0.183', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.128, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\god\AppData\Local\...}, goog:chromeOptions: {debuggerAddress: localhost:58030}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: de6e03ea3cd6880405f3d7dfd56938de]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=89.0.4389.128)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-M1BJJAF', ip: '192.168.0.183', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.128, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\god\AppData\Local\...}, goog:chromeOptions: {debuggerAddress: localhost:58030}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: de6e03ea3cd6880405f3d7dfd56938de
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at com.testframework.AdactinExtendReport.tc1(AdactinExtendReport.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-27T03:50:10Z" finished-at="2021-04-27T03:50:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="afterMethod" is-config="true" duration-ms="391" started-at="2021-04-27T03:50:11Z" finished-at="2021-04-27T03:50:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testframework.AdactinExtendReport.tc1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.testframework.AdactinExtendReport@402a079c]" name="afterClass" is-config="true" duration-ms="321" started-at="2021-04-27T03:50:12Z" finished-at="2021-04-27T03:50:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.testframework.AdactinExtendReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
